version: '3.8'

x-shared-api-worker-env: &shared-api-worker-env
  API_DEBUG: ${API_DEBUG:-0}
  API_DEBUG_PORT: ${API_DEBUG_PORT:-5678}
  CACHE_DIR: ${CACHE_DIR:-/app/volumes}
  LOGFIRE_LOG_ENDPOINT: ${LOGFIRE_LOG_ENDPOINT:-"http://otel_collector:4318"}
  DASHSCOPE_API_KEY: ${DASHSCOPE_API_KEY}
  DEEPSEEK_API_KEY: ${DEEPSEEK_API_KEY}

services:
  api:
    image: idiot-api
    volumes:
      - ./volumes:/app/volumes
    working_dir: /app
    command: ./api/run.sh
    restart: always
    environment:
      <<: *shared-api-worker-env
    ports:
      - ${API_DEBUG_EXPOSED_PORT}:${API_DEBUG_PORT:-5678}
    build:
      context: ../
      dockerfile: ./api/Dockerfile

  nginx:
    image: nginx:latest
    ports:
      - "8143:8143"
    volumes:
      - ../nginx/conf.d:/etc/nginx/conf.d
      - ../nginx/ssl:/etc/nginx/ssl
    restart: always

  postgres:
    image: postgres:17.5
    restart: always
    volumes:
      - ./volumes/postgres/data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgres

  jaeger:
    image: jaegertracing/jaeger:2.8.0
    # ports:
      # - "16686:16686" # web ui port # reverse proxy from /jaeger to 16686
      # - "4318:4318" # internal log endpoint
    volumes:
      - ../jaeger/config.yaml:/jaeger/config.yaml
      - ../jaeger/ui-config.json:/jaeger/ui-config.json
      # have to create ./volumes/jaeger and chmod 777 it before starting jaeger
      - ./volumes/jaeger:/home/jaeger
    command: --config /jaeger/config.yaml

  otel_collector:
    image: otel/opentelemetry-collector-contrib:0.128.0
    volumes:
      - ../otel_collector/otel-collector-config-connector.yml:/etc/otelcol/otel-collector-config.yml
    command: --config /etc/otelcol/otel-collector-config.yml
    depends_on:
      - jaeger
  
  prometheus:
    image: prom/prometheus:v3.4.2
    command:
      - --config.file=/config/prometheus-config.yaml
      - --storage.tsdb.path=/tmp/prometheus/data
      - --storage.tsdb.retention.time=7d
      # because nginx reverse proxy from /prometheus
      - --web.external-url=/prometheus
    volumes:
      - ../prometheus/prometheus-config.yaml:/config/prometheus-config.yaml:ro
      # have to create ./volumes/prometheus and chmod 777 it before starting jaeger
      - ./volumes/prometheus:/tmp/prometheus/data

  seaweed:
    image: chrislusf/seaweedfs:3.92
    volumes:
      - ./volumes/seaweedfs/data:/data  # 挂载宿主机目录到容器
    command: server -dir=/data -s3  # 指定数据存储目录, 开启s3服务

  # 暂时不启用cortex作为prometheus的长期存储
  # cortex:
  #   image: cortexproject/cortex:master-7a83210
  #   command:
  #     - -config.file=/config/cortex-config.yaml
  #   volumes:
  #     - ../cortex/cortex-config.yaml:/config/cortex-config.yaml:ro
  #     - ./volumes/cortex/data/blocks_storage:/data/blocks_storage
  #     - ./volumes/cortex/data/tsdb:/data/tsdb
  #     - ./volumes/cortex/data/tsdb-sync:/data/tsdb-sync
  #     - ./volumes/cortex/alertmanager:/alertmanager
  #     - ./volumes/cortex/data/alertmanager:/data/alertmanager
  #     - ./volumes/cortex/rules:/rules
  #     - ./volumes/cortex/data/ruler:/data/ruler
  #     - ./volumes/cortex/data/compactor:/tmp/cortex/compactor
  #   healthcheck:
  #     test: wget -qO- http://127.0.0.1:9009/ready
  #     interval: 10s
  #     timeout: 10s
  #     retries: 3
  #   restart: on-failure

networks:
  ai-networks: